{
	"Query Handler": {
		"prefix": "qh",
		"body": [
		  "using System.Data;",
		  "using System.Threading;",
		  "using System.Threading.Tasks;",
		  "using HeatKeeper.Server.CQRS;",
		  "using HeatKeeper.Server.Database;",
		  "using DbReader;",
		  "using System.Linq;",
		  "",
		  "namespace ${TM_DIRECTORY/(.*src.)|(src.*)|([\\/])/${2}${3:+.}/g}",
		  "{",
		  "    public class ${TM_FILENAME/(.*)\\..+$/$1/} : IQueryHandler<${TM_FILENAME/(.*)\\Handler..+$/$1/},${TM_FILENAME/(.*)\\Handler..+$/$1Result/}>",
		  "    {",
		  "        private readonly IDbConnection dbConnection;",
		  "        private readonly ISqlProvider sqlProvider;",
		  "",
		  "        public ${TM_FILENAME/(.*)\\..+$/$1/}(IDbConnection dbConnection, ISqlProvider sqlProvider)",
		  "        {",
		  "            this.dbConnection = dbConnection;",
		  "            this.sqlProvider = sqlProvider;",
		  "        }",
		  "",
		  "        public async Task<${TM_FILENAME/(.*)\\Handler..+$/$1Result/}> HandleAsync(${TM_FILENAME/(.*)\\Handler..+$/$1/} query, CancellationToken cancellationToken = default(CancellationToken))",
		  "        {",
		  "            return null;",
		  "        }",
		  "    }",
		  "    public class ${TM_FILENAME/(.*)\\Handler..+$/$1/} : IQuery<${TM_FILENAME/(.*)\\Handler..+$/$1Result/}>",
		  "    {",
		  "    }",
		  "",
		  "    public class ${TM_FILENAME/(.*)\\Handler..+$/$1Result/}",
		  "    {",
		  "    }",
		  "",
		  "",
		  "}"
		],
		"description": "Query Handler"
	  },
	  "Command Handler": {
		"prefix": "ch",
		"body": [
		  "using DbReader;",
		  "using HeatKeeper.Server.CQRS;",
		  "using HeatKeeper.Server.Database;",
		  "using System.Data;",
		  "using System.Data.Common;",
		  "using System.Threading;",
		  "using System.Threading.Tasks;",
		  "",
		  "namespace ${TM_DIRECTORY/(.*src.)|(src.*)|([\\/])/${2}${3:+.}/g}",
		  "{",
		  "    public class ${TM_FILENAME/(.*)\\..+$/$1/} : ICommandHandler<${TM_FILENAME/(.*)\\Handler..+$/$1/}>",
		  "    {",
		  "        private readonly IDbConnection dbConnection;",
		  "        private readonly ISqlProvider sqlProvider;",
		  "",
		  "        public ${TM_FILENAME/(.*)\\..+$/$1/}(IDbConnection dbConnection, ISqlProvider sqlProvider)",
		  "        {",
		  "            this.dbConnection = dbConnection;",
		  "            this.sqlProvider = sqlProvider;",
		  "        }",
		  "",
		  "        public async Task HandleAsync(SampleCommand command, CancellationToken cancellationToken = default(CancellationToken))",
		  "        {            ",
		  "        }",
		  "    }",
		  "",
		  "    public class SampleCommand",
		  "    {        ",
		  "    }",
		  "}"
		],
		"description": "Command Handler"
	  }


}